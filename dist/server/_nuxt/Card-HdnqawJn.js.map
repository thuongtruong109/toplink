{"version":3,"file":"Card-HdnqawJn.js","sources":["../../../../components/icons/tick.vue","../../../../components/icons/download.vue","../../../../components/icons/url.vue","../../../../components/lists/Card.vue"],"sourcesContent":["<template>\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1.1em\" height=\"1.1em\" viewBox=\"0 0 16 16\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\" d=\"m2.75 8.75l3.5 3.5l7-7.5\"/></svg>\r\n</template>","<template>\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1.1em\" height=\"1.1em\" viewBox=\"0 0 24 24\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\" d=\"M4 16.004V17a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3v-1M12 4.5v11m3.5-3.5L12 15.5L8.5 12\"/></svg>\r\n</template>","<template>\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1.1em\" height=\"1.1em\" viewBox=\"0 0 24 24\"><g fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\" color=\"currentColor\"><path d=\"M10 13.229q.213.349.504.654a3.56 3.56 0 0 0 4.454.59q.391-.24.73-.59l3.239-3.372c1.43-1.49 1.43-3.904 0-5.394a3.564 3.564 0 0 0-5.183 0l-.714.743\"/><path d=\"m10.97 18.14l-.713.743a3.564 3.564 0 0 1-5.184 0c-1.43-1.49-1.43-3.905 0-5.394l3.24-3.372a3.564 3.564 0 0 1 5.183 0q.291.305.504.654\"/></g></svg>\r\n</template>\r\n","<script setup lang=\"ts\">\r\n    import type { IUrl, IUrlItem } from '~/types';\r\n\r\n    defineProps<{\r\n        url: IUrl\r\n    }>()\r\n\r\n    const colorStyle = (color: string)=> {\r\n        return {\r\n            bg: `bg-${color}-50/50 border-${color}-100 hover:border-${color}-200`,\r\n            title: `text-${color}-400 border-${color}-100`,\r\n            img: `group-hover:ring-${color}-300`,\r\n            name: `group-hover:text-${color}-500`,\r\n        }\r\n    }\r\n\r\n    const isExported = ref<boolean>(false);\r\n    const onExporting = async (content: IUrl) => {\r\n        let data: string = \"\"\r\n\r\n        await content.items.forEach((item: IUrlItem, idx: number) => {\r\n            data += `${item.name}: ${item.link}`\r\n            if (idx < (content.items.length -1)) {\r\n                data += \", \"\r\n            }\r\n        })\r\n\r\n        let a = document.createElement('a');\r\n        let blob = new Blob([JSON.stringify(data)], {'type': 'text/plain'});\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.download = `${content.title}.txt`\r\n        a.click();\r\n\r\n        isExported.value = true\r\n        setTimeout(() => {\r\n            isExported.value = false\r\n        }, 1000)\r\n    }\r\n\r\n    const isCopying = ref<boolean>(false)\r\n    const onCopyUrl = (text: string) => {\r\n        navigator.clipboard.writeText(`${window.location.href}id/${text}`).then(() => {\r\n            isCopying.value = true\r\n            setTimeout(() => {\r\n                isCopying.value = false\r\n            }, 1000)\r\n        }, (err) => {\r\n            console.error('Async: Could not copy text: ', err);\r\n        });\r\n    }\r\n\r\n    const onNavigate = (url: string) => {\r\n        window?.open(url, '_blank')?.focus();\r\n    }\r\n</script>\r\n\r\n<template>\r\n    <div :class=\"`break-inside group/card h-fit border-2 p-2 rounded-xl mb-4 ${colorStyle(url.color).bg}`\" :id=\"url.id\">\r\n        <div :class=\"`text-base font-medium border rounded-md px-2 py-1 flex justify-between items-center ${colorStyle(url.color).title}`\">\r\n            <div class=\"righteous_font flex items-center space-x-1 whitespace-nowrap overflow-hidden max-w-[calc(100%-82px)]\">\r\n                <img :src=\"url.icon\" :alt=\"`${url.title} icon`\" width=\"16\" height=\"16\" class=\"w-4 h-4\" />\r\n                <h3>{{ url.title }}</h3>\r\n            </div>\r\n            <div class=\"flex md:hidden md:group-hover/card:flex items-center space-x-1.5 ml-2\">\r\n                <NTooltip class=\"cursor-pointer bg-black text-white whitespace-nowrap px-1 rounded\">\r\n                    <template #trigger>\r\n                        <NButton class=\"border border-slate-100 hover:bg-white rounded-md p-0.5\">\r\n                            <IconsTick v-if=\"isExported\" />\r\n                            <IconsDownload v-else @click=\"onExporting(url)\" />\r\n                        </NButton>\r\n                    </template>\r\n                    Export data\r\n                </NTooltip>\r\n                <NTooltip class=\"cursor-pointer bg-black text-white whitespace-nowrap px-1 rounded\">\r\n                    <template #trigger>\r\n                        <NButton class=\"border border-slate-100 hover:bg-white rounded-md p-0.5\">\r\n                            <IconsTick v-if=\"isCopying\" />\r\n                            <IconsUrl v-else @click=\"onCopyUrl(url.id)\" />\r\n                        </NButton>\r\n                    </template>\r\n                    {{ isCopying ? 'Copied' : 'Copy url to share' }}\r\n                </NTooltip>\r\n            </div>\r\n        </div>\r\n        <ul class=\"flex flex-wrap w-full mt-3 gap-5\">\r\n            <li class=\"flex flex-col items-center space-y-1.5 group text-xs cursor-pointer last:mr-0 max-w-16\" :id=\"item.name\" v-for=\"(item, i) in url.items\" :key=\"i\" @click=\"onNavigate(item.link)\" :title=\"item.name\">\r\n                <figure :class=\"`rounded-full h-10 w-10 group-hover:shadow-md bg-white overflow-hidden border ${colorStyle(url.color).img} group-hover:ring-[2px] ease-linear duration-200`\">\r\n                    <img :src=\"item.img\" :alt=\"item.name\" width=\"40\" height=\"40\" class=\"w-full h-full\" />\r\n                </figure>\r\n                <span :class=\"`${colorStyle(url.color).name} ease-linear duration-200 truncate max-w-full`\">{{ item.name }}</span>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</template>"],"names":["_sfc_ssrRender","_ssrRenderAttrs","_mergeProps"],"mappings":";;;;;AAAA,SAAAA,iBAAA,MAAA,OAAA,SAAA,QAAA;AACS,QAAA,OAAkCC,eAAAC,WAAA;AAAA,IAAC,OAAM;AAAA,IAAQ;IAAe;IADzE,SAAA;AAAA;;;;;;;;;;ACAA,SAAAF,iBAAA,MAAA,OAAA,SAAA,QAAA;AACS,QAAA,OAAkCC,eAAAC,WAAA;AAAA,IAAC,OAAM;AAAA,IAAQ;IAAe;IADzE,SAAA;AAAA;;;;;;;;;;ACAA,SAAA,eAAA,MAAA,OAAA,SAAA,QAAA;AACS,QAAA,OAAkCD,eAAAC,WAAA;AAAA,IAAC,OAAM;AAAA,IAAQ;IAAe;IADzE,SAAA;AAAA;;;;;;;;;;;;;;;;ACOU,UAAA,aAAa,CAAC,UAAiB;AAC1B,aAAA;AAAA,QACH,IAAI,MAAM,KAAK,iBAAiB,KAAK,qBAAqB,KAAK;AAAA,QAC/D,OAAO,QAAQ,KAAK,eAAe,KAAK;AAAA,QACxC,KAAK,oBAAoB,KAAK;AAAA,QAC9B,MAAM,oBAAoB,KAAK;AAAA,MAAA;AAAA,IACnC;AAGE,UAAA,aAAa,IAAa,KAAK;AAC/B,UAAA,cAAc,OAAO,YAAkB;AACzC,UAAI,OAAe;AAEnB,YAAM,QAAQ,MAAM,QAAQ,CAAC,MAAgB,QAAgB;AACzD,gBAAQ,GAAG,KAAK,IAAI,KAAK,KAAK,IAAI;AAClC,YAAI,MAAO,QAAQ,MAAM,SAAQ,GAAI;AACzB,kBAAA;AAAA,QACZ;AAAA,MAAA,CACH;AAEG,UAAA,IAAa,SAAA,cAAc,GAAG;AAClC,UAAI,OAAO,IAAI,KAAK,CAAC,KAAK,UAAU,IAAI,CAAC,GAAG,EAAC,QAAQ,aAAa,CAAA;AAClE,QAAE,OAAO,SAAO,IAAI,gBAAgB,IAAI;AACtC,QAAA,WAAW,GAAG,QAAQ,KAAK;AAC7B,QAAE,MAAM;AAER,iBAAW,QAAQ;AACnB,iBAAW,MAAM;AACb,mBAAW,QAAQ;AAAA,SACpB,GAAI;AAAA,IAAA;AAGL,UAAA,YAAY,IAAa,KAAK;AAC9B,UAAA,YAAY,CAAC,SAAiB;AACtB,MAAA,SAAA,UAAU,UAAU,GAAU,SAAA,SAAS,IAAI,MAAM,IAAI,EAAE,EAAE,KAAK,MAAM;AAC1E,kBAAU,QAAQ;AAClB,mBAAW,MAAM;AACb,oBAAU,QAAQ;AAAA,WACnB,GAAI;AAAA,MACX,GAAG,CAAC,QAAQ;AACA,gBAAA,MAAM,gCAAgC,GAAG;AAAA,MAAA,CACpD;AAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}